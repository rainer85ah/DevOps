name: "Read App Config"
description: "Reads .app-config.yml and outputs key variables"

inputs:
  app-path:
    description: "Path to the app"
    required: true
outputs:
  name:
    description: "App name"
    value: string
  framework:
    description: "Framework"
    value: string
  language:
    description: "Language"
    value: string
  lint:
    description: "Enable lint"
    value: boolean
  test:
    description: "Enable tests"
    value: boolean
  build:
    description: "Enable build"
    value: boolean
  deploy_enabled:
    description: "Deploy enabled"
    value: boolean
  deploy_platform:
    description: "Deploy platform"
    value: string
  deploy_strategy:
    description: "Deploy strategy"
    value: string
  environment:
    description: "Environment"
    value: string
  notify_method:
    description: "Notification method"
    value: string

runs:
  using: "composite"
  steps:
    - run: |
        pip install yq --quiet
        CFG="${{ inputs.app-path }}/.app-config.yml"
        echo "name=$(yq -r '.name' $CFG)" >> $GITHUB_OUTPUT
        echo "framework=$(yq -r '.framework' $CFG)" >> $GITHUB_OUTPUT
        echo "language=$(yq -r '.language' $CFG)" >> $GITHUB_OUTPUT
        echo "lint=$(yq -r '.lint // .ci // true' $CFG)" >> $GITHUB_OUTPUT
        echo "test=$(yq -r '.test // true' $CFG)" >> $GITHUB_OUTPUT
        echo "build=$(yq -r '.build // true' $CFG)" >> $GITHUB_OUTPUT
        echo "deploy_enabled=$(yq -r '.deploy.enabled // false' $CFG)" >> $GITHUB_OUTPUT
        echo "deploy_platform=$(yq -r '.deploy.platform // \"\"' $CFG)" >> $GITHUB_OUTPUT
        echo "deploy_strategy=$(yq -r '.deploy.strategy // \"rolling\"' $CFG)" >> $GITHUB_OUTPUT
        echo "environment=$(yq -r '.environment // \"staging\"' $CFG)" >> $GITHUB_OUTPUT
        echo "notify_method=$(yq -r '.notify.method // \"slack\"' $CFG)" >> $GITHUB_OUTPUT
      shell: bash