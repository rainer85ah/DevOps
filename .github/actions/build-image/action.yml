name: "Build Image Dispatcher"
description: "Delegates Docker image build to the correct language-specific action"

inputs:
  app-path:
    required: true
    description: string
  image-name:
    required: true
    description: string
  language:
    required: true
    description: string
  tag:
    required: false
    description: string
    default: "latest"

runs:
  using: "composite"
  steps:
    - name: Build Python Docker image
      if: ${{ inputs.language == 'python' }}
      uses: ./python
      with:
        app-path: ${{ inputs.app-path }}
        image-name: ${{ inputs.image-name }}
        tag: ${{ inputs.tag }}

    - name: Build Java Docker image
      if: ${{ inputs.language == 'java' }}
      uses: ./java
      with:
        app-path: ${{ inputs.app-path }}
        image-name: ${{ inputs.image-name }}
        tag: ${{ inputs.tag }}

    - name: Build Go Docker image
      if: ${{ inputs.language == 'go' }}
      uses: ./go
      with:
        app-path: ${{ inputs.app-path }}
        image-name: ${{ inputs.image-name }}
        tag: ${{ inputs.tag }}

    - name: Build Node.js Docker image
      if: ${{ inputs.language == 'node' || inputs.language == 'javascript' || inputs.language == 'typescript' }}
      uses: ./node
      with:
        app-path: ${{ inputs.app-path }}
        image-name: ${{ inputs.image-name }}
        tag: ${{ inputs.tag }}

    - name: Build Rust Docker image
      if: ${{ inputs.language == 'rust' }}
      uses: ./rust
      with:
        app-path: ${{ inputs.app-path }}
        image-name: ${{ inputs.image-name }}
        tag: ${{ inputs.tag }}

    - name: Build fallback
      if: ${{ !contains('python,java,go,node,javascript,typescript,rust', inputs.language) }}
      run: echo "No Docker build configured for ${{ inputs.language }}."
      shell: bash
